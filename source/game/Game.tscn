[gd_scene load_steps=7 format=2]

[ext_resource path="res://source/game/Game.gd" type="Script" id=1]
[ext_resource path="res://graphics/images/interface/white.png" type="Texture" id=2]
[ext_resource path="res://source/interface/game/GameUI.tscn" type="PackedScene" id=3]
[ext_resource path="res://source/camera/GameCam.tscn" type="PackedScene" id=4]


[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform vec3 delta;

/*
TODO: decide if we want individual uniforms for the hint range
uniform int delta_r : hint_range(-510, 510);
uniform int delta_g : hint_range(-510, 510);
uniform int delta_b : hint_range(-510, 510);
*/

void fragment() {
	vec4 final = texture(SCREEN_TEXTURE, SCREEN_UV);
	vec3 normalized = delta / 255.0;

	final.r = clamp(final.r + normalized.x, 0, 1);
	final.g = clamp(final.g + normalized.y, 0, 1);
	final.b = clamp(final.b + normalized.z, 0, 1);

	COLOR = final;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/delta = null

[node name="Game" type="Node2D"]
script = ExtResource( 1 )

[node name="ScenarioContainer" type="Node2D" parent="."]

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="TimeShader" type="TextureRect" parent="CanvasLayer"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
texture = ExtResource( 2 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GameUI" parent="." instance=ExtResource( 3 )]

[node name="Camera2D" parent="." groups=[
"GameCam",
] instance=ExtResource( 4 )]
position = Vector2( 960, 540 )
anchor_mode = 1
[connection signal="combat_option_selected" from="GameUI" to="." method="_on_GameUI_combat_option_selected"]
[connection signal="end_turn_pressed" from="GameUI" to="." method="_on_GameUI_end_turn_pressed"]
[connection signal="move_selected" from="GameUI" to="." method="_on_GameUI_move_selected"]
[connection signal="recruit_option_selected" from="GameUI" to="." method="_on_GameUI_recruit_option_selected"]
[connection signal="recruit_selected" from="GameUI" to="." method="_on_GameUI_recruit_selected"]
[connection signal="skill_selected" from="GameUI" to="." method="_on_GameUI_skill_selected"]
